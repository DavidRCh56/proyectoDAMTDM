// Generated by view binder compiler. Do not edit!
package com.iesvdc.multimedia.proyectodamtdm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.iesvdc.multimedia.proyectodamtdm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogEditRecipeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText etEditCalories;

  @NonNull
  public final EditText etEditDescription;

  @NonNull
  public final EditText etEditIngredients;

  @NonNull
  public final EditText etEditName;

  private DialogEditRecipeBinding(@NonNull LinearLayout rootView, @NonNull Button btnCancel,
      @NonNull Button btnSave, @NonNull EditText etEditCalories,
      @NonNull EditText etEditDescription, @NonNull EditText etEditIngredients,
      @NonNull EditText etEditName) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnSave = btnSave;
    this.etEditCalories = etEditCalories;
    this.etEditDescription = etEditDescription;
    this.etEditIngredients = etEditIngredients;
    this.etEditName = etEditName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogEditRecipeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogEditRecipeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_edit_recipe, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogEditRecipeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.etEditCalories;
      EditText etEditCalories = ViewBindings.findChildViewById(rootView, id);
      if (etEditCalories == null) {
        break missingId;
      }

      id = R.id.etEditDescription;
      EditText etEditDescription = ViewBindings.findChildViewById(rootView, id);
      if (etEditDescription == null) {
        break missingId;
      }

      id = R.id.etEditIngredients;
      EditText etEditIngredients = ViewBindings.findChildViewById(rootView, id);
      if (etEditIngredients == null) {
        break missingId;
      }

      id = R.id.etEditName;
      EditText etEditName = ViewBindings.findChildViewById(rootView, id);
      if (etEditName == null) {
        break missingId;
      }

      return new DialogEditRecipeBinding((LinearLayout) rootView, btnCancel, btnSave,
          etEditCalories, etEditDescription, etEditIngredients, etEditName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
